name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate icons
        run: npm run generate-icons

      - name: Create extension package
        run: |
          zip -r extension.zip . \
            -x "node_modules/*" \
            -x ".git/*" \
            -x ".github/*" \
            -x "*.zip" \
            -x "__tests__/*" \
            -x "jest.config.js" \
            -x "jest.e2e.config.js" \
            -x "jest.e2e.setup.js"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension.zip
          asset_name: laneros-item-filter-${{ github.ref_name }}.zip
          asset_content_type: application/zip

  publish-chrome:
    name: Publish to Chrome Web Store
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download extension package
        uses: actions/download-artifact@v3
        with:
          name: extension-package
          path: ./extension

      - name: Publish to Chrome Web Store
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ github.ref }}"
          prerelease: false
          title: "Release ${{ github.ref_name }}"
          files: |
            extension.zip 